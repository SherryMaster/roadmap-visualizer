{
  "type": "object",
  "properties": {
    "schema_metadata": {
      "type": "object",
      "properties": {
        "schema_type": {
          "type": "string",
          "enum": ["phase_tasks"],
          "description": "Identifies this as a phase tasks schema for generating task lists for specific phases"
        },
        "schema_version": {
          "type": "string",
          "default": "1.0.0"
        },
        "roadmap_id": {
          "type": "string",
          "description": "Reference to the parent roadmap this phase belongs to"
        },
        "target_phase_id": {
          "type": "string",
          "description": "Specific phase_id from roadmap skeleton that these tasks belong to"
        },
        "generation_target": {
          "type": "string",
          "enum": ["phase_tasks_only"],
          "description": "Indicates this schema generates task lists without detailed task content"
        }
      },
      "required": ["schema_type", "roadmap_id", "target_phase_id", "generation_target"]
    },
    "phase_context": {
      "type": "object",
      "properties": {
        "phase_title": {
          "type": "string",
          "description": "Title of the phase for context (should match roadmap skeleton)"
        },
        "phase_summary": {
          "type": "string", 
          "description": "Summary of the phase for context (should match roadmap skeleton)"
        },
        "estimated_task_count": {
          "type": "integer",
          "description": "Expected number of tasks (should match roadmap skeleton estimate)"
        }
      },
      "required": ["phase_title", "phase_summary", "estimated_task_count"]
    },
    "phase_tasks": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "task_id": {
            "type": "string",
            "description": "Unique identifier for this task, used for linking with task-details schema"
          },
          "task_title": {
            "type": "string",
            "description": "Clear, descriptive title of the task"
          },
          "task_order": {
            "type": "integer",
            "description": "Sequential order of this task within the phase"
          },
          "task_summary": {
            "type": "string",
            "description": "Brief summary of what this task accomplishes"
          },
          "task_priority": {
            "type": "string",
            "enum": ["low", "medium", "high", "critical"],
            "description": "Priority level of this task within the phase"
          },
          "difficulty_level": {
            "type": "string",
            "enum": ["very_easy", "easy", "normal", "difficult", "challenging"],
            "description": "Difficulty level of this specific task"
          },
          "estimated_time": {
            "type": "object",
            "properties": {
              "min_time": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "unit": {
                    "type": "string",
                    "enum": ["minutes", "hours", "days", "weeks"]
                  }
                },
                "required": ["amount", "unit"]
              },
              "max_time": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "unit": {
                    "type": "string",
                    "enum": ["minutes", "hours", "days", "weeks"]
                  }
                },
                "required": ["amount", "unit"]
              }
            },
            "required": ["min_time", "max_time"]
          },
          "task_dependencies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "phase_id": {
                  "type": "string",
                  "description": "Phase ID of the dependency (can be current phase or previous phases)"
                },
                "task_id": {
                  "type": "string",
                  "description": "Task ID of the dependency"
                },
                "dependency_type": {
                  "type": "string",
                  "enum": ["required", "recommended", "optional"],
                  "description": "Type of dependency relationship"
                }
              },
              "required": ["phase_id", "task_id", "dependency_type"]
            }
          },
          "task_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags categorizing this task"
          },
          "prerequisites": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Knowledge or skills required before starting this task"
          },
          "expected_outcomes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "What the learner should achieve upon completing this task"
          },
          "task_type": {
            "type": "string",
            "enum": ["setup", "learning", "implementation", "testing", "integration", "documentation", "review"],
            "description": "Category of task for better organization"
          }
        },
        "required": [
          "task_id",
          "task_title",
          "task_order", 
          "task_summary",
          "task_priority",
          "difficulty_level",
          "estimated_time",
          "task_dependencies",
          "task_tags",
          "prerequisites",
          "expected_outcomes",
          "task_type"
        ]
      }
    }
  },
  "required": [
    "schema_metadata",
    "phase_context",
    "phase_tasks"
  ]
}
